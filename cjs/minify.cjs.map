{"version":3,"file":"minify.cjs","sources":["../src/minify.js"],"sourcesContent":["/**\n * [rollup-plugin-minification]{@link https://github.com/UmamiAppearance/minification}\n *\n * @version 0.2.0\n * @author UmamiAppearance [mail@umamiappearance.eu]\n * @license MIT\n */\n\nimport { minify } from \"terser\";\n\nconst terser = (options={}) => {\n\n    return {\n        name: \"minification\",\n\n        async renderChunk(code, chunk, outputOptions) {\n            \n            const defaultOptions = {\n                sourceMap:\n                    Boolean(outputOptions.sourcemap) ||\n                    Boolean(outputOptions.sourceMap),\n                module: \n                    (/^esm?$/).test(outputOptions.format),\n                toplevel:\n                    outputOptions.format === \"cjs\"  \n            };\n\n            options = {\n                ...defaultOptions,\n                ...options\n            };\n\n            const result = await minify(\n                code,\n                options\n            );\n\n            if (result.nameCache) {\n                let { vars, props } = options.nameCache;\n    \n                // only assign nameCache.vars if it was provided, and if terser produced values:\n                if (vars) {\n                    const newVars = result.nameCache.vars && result.nameCache.vars.props;\n                    if (newVars) {\n                        vars.props = vars.props || {};\n                        Object.assign(vars.props, newVars);\n                    }\n                }\n    \n                // support populating an empty nameCache object:\n                if (!props) {\n                    props = options.nameCache.props = {};\n                }\n    \n                // merge updated props into original nameCache object:\n                const newProps =\n                result.nameCache.props && result.nameCache.props.props;\n                if (newProps) {\n                    props.props = props.props || {};\n                    Object.assign(props.props, newProps);\n                }\n            }\n\n            return result.code;\n        },\n    };\n\n};\n\nexport { terser };\n"],"names":["minify"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACK,MAAC,MAAM,GAAG,CAAC,OAAO,CAAC,EAAE,KAAK;AAC/B;AACA,IAAI,OAAO;AACX,QAAQ,IAAI,EAAE,cAAc;AAC5B;AACA,QAAQ,MAAM,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE;AACtD;AACA,YAAY,MAAM,cAAc,GAAG;AACnC,gBAAgB,SAAS;AACzB,oBAAoB,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC;AACpD,oBAAoB,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC;AACpD,gBAAgB,MAAM;AACtB,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;AACzD,gBAAgB,QAAQ;AACxB,oBAAoB,aAAa,CAAC,MAAM,KAAK,KAAK;AAClD,aAAa,CAAC;AACd;AACA,YAAY,OAAO,GAAG;AACtB,gBAAgB,GAAG,cAAc;AACjC,gBAAgB,GAAG,OAAO;AAC1B,aAAa,CAAC;AACd;AACA,YAAY,MAAM,MAAM,GAAG,MAAMA,eAAM;AACvC,gBAAgB,IAAI;AACpB,gBAAgB,OAAO;AACvB,aAAa,CAAC;AACd;AACA,YAAY,IAAI,MAAM,CAAC,SAAS,EAAE;AAClC,gBAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC;AACxD;AACA;AACA,gBAAgB,IAAI,IAAI,EAAE;AAC1B,oBAAoB,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;AACzF,oBAAoB,IAAI,OAAO,EAAE;AACjC,wBAAwB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;AACtD,wBAAwB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC3D,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,gBAAgB,IAAI,CAAC,KAAK,EAAE;AAC5B,oBAAoB,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;AACzD,iBAAiB;AACjB;AACA;AACA,gBAAgB,MAAM,QAAQ;AAC9B,gBAAgB,MAAM,CAAC,SAAS,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;AACvE,gBAAgB,IAAI,QAAQ,EAAE;AAC9B,oBAAoB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;AACpD,oBAAoB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACzD,iBAAiB;AACjB,aAAa;AACb;AACA,YAAY,OAAO,MAAM,CAAC,IAAI,CAAC;AAC/B,SAAS;AACT,KAAK,CAAC;AACN;AACA;;;;"}